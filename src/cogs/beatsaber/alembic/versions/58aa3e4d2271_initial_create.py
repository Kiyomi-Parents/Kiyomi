"""Initial create

Revision ID: 58aa3e4d2271
Revises: 
Create Date: 2021-06-22 21:40:29.340465

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '58aa3e4d2271'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('guild',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('discord_guild_id', sa.Integer(), nullable=True),
    sa.Column('recent_scores_channel_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('pp_roles', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('playerId', sa.String(), nullable=True),
    sa.Column('playerName', sa.String(), nullable=True),
    sa.Column('avatar', sa.String(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('countryRank', sa.Integer(), nullable=True),
    sa.Column('pp', sa.Float(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('badges', sa.JSON(), nullable=True),
    sa.Column('history', sa.String(), nullable=True),
    sa.Column('permissions', sa.Integer(), nullable=True),
    sa.Column('inactive', sa.Integer(), nullable=True),
    sa.Column('banned', sa.Integer(), nullable=True),
    sa.Column('discord_user_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('guild_player',
    sa.Column('guild_id', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], )
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('pp_requirement', sa.Integer(), nullable=True),
    sa.Column('rank_requirement', sa.Integer(), nullable=True),
    sa.Column('country_rank_requirement', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('score',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('scoreId', sa.Integer(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('unmodififiedScore', sa.Integer(), nullable=True),
    sa.Column('mods', sa.String(), nullable=True),
    sa.Column('pp', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('timeSet', sa.DateTime(), nullable=True),
    sa.Column('leaderboardId', sa.Integer(), nullable=True),
    sa.Column('songHash', sa.String(), nullable=True),
    sa.Column('songName', sa.String(), nullable=True),
    sa.Column('songSubName', sa.String(), nullable=True),
    sa.Column('songAuthorName', sa.String(), nullable=True),
    sa.Column('levelAuthorName', sa.String(), nullable=True),
    sa.Column('difficulty', sa.Integer(), nullable=True),
    sa.Column('difficultyRaw', sa.String(), nullable=True),
    sa.Column('maxScore', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player_role',
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], )
    )
    op.create_table('score_guild',
    sa.Column('score_id', sa.Integer(), nullable=True),
    sa.Column('guild_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild.id'], ),
    sa.ForeignKeyConstraint(['score_id'], ['score.id'], )
    )
    op.create_table('song',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('_metadata', sa.JSON(), nullable=True),
    sa.Column('stats', sa.JSON(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('deletedAt', sa.DateTime(), nullable=True),
    sa.Column('_id', sa.String(), nullable=True),
    sa.Column('key', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('uploader', sa.JSON(), nullable=True),
    sa.Column('hash', sa.String(), nullable=True),
    sa.Column('uploaded', sa.String(), nullable=True),
    sa.Column('directDownload', sa.String(), nullable=True),
    sa.Column('downloadURL', sa.String(), nullable=True),
    sa.Column('coverURL', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['hash'], ['score.songHash'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('song')
    op.drop_table('score_guild')
    op.drop_table('player_role')
    op.drop_table('score')
    op.drop_table('role')
    op.drop_table('guild_player')
    op.drop_table('player')
    op.drop_table('guild')
    # ### end Alembic commands ###
