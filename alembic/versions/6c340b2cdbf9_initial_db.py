"""Initial db

Revision ID: 6c340b2cdbf9
Revises: 
Create Date: 2021-08-16 08:14:48.092598

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6c340b2cdbf9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('beatmap',
    sa.Column('id', sa.String(length=128), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('uploaded', sa.DateTime(), nullable=True),
    sa.Column('automapper', sa.Boolean(), nullable=True),
    sa.Column('ranked', sa.Boolean(), nullable=True),
    sa.Column('qualified', sa.Boolean(), nullable=True),
    sa.Column('uploader_id', sa.Integer(), nullable=True),
    sa.Column('uploader_name', sa.String(length=128), nullable=True),
    sa.Column('uploader_hash', sa.String(length=128), nullable=True),
    sa.Column('uploader_avatar', sa.String(length=128), nullable=True),
    sa.Column('metadata_bpm', sa.Float(), nullable=True),
    sa.Column('metadata_duration', sa.Integer(), nullable=True),
    sa.Column('metadata_song_name', sa.String(length=128), nullable=True),
    sa.Column('metadata_song_sub_name', sa.String(length=128), nullable=True),
    sa.Column('metadata_song_author_name', sa.String(length=128), nullable=True),
    sa.Column('metadata_level_author_name', sa.String(length=128), nullable=True),
    sa.Column('stats_plays', sa.Integer(), nullable=True),
    sa.Column('stats_downloads', sa.Integer(), nullable=True),
    sa.Column('stats_upvotes', sa.Integer(), nullable=True),
    sa.Column('stats_downvotes', sa.Integer(), nullable=True),
    sa.Column('stats_score', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('guild',
    sa.Column('id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('member',
    sa.Column('id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player',
    sa.Column('id', sa.String(length=128), autoincrement=False, nullable=False),
    sa.Column('player_name', sa.String(length=128), nullable=True),
    sa.Column('avatar', sa.String(length=128), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('country_rank', sa.Integer(), nullable=True),
    sa.Column('pp', sa.Float(), nullable=True),
    sa.Column('country', sa.String(length=128), nullable=True),
    sa.Column('role', sa.String(length=128), nullable=True),
    sa.Column('badges', sa.JSON(), nullable=True),
    sa.Column('history', sa.String(length=512), nullable=True),
    sa.Column('permissions', sa.Integer(), nullable=True),
    sa.Column('inactive', sa.Integer(), nullable=True),
    sa.Column('banned', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('beatmap_version',
    sa.Column('hash', sa.String(length=128), autoincrement=False, nullable=False),
    sa.Column('map_id', sa.String(length=128), nullable=True),
    sa.Column('key', sa.String(length=128), nullable=True),
    sa.Column('state', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('sage_score', sa.Integer(), nullable=True),
    sa.Column('download_url', sa.String(length=256), nullable=True),
    sa.Column('cover_url', sa.String(length=256), nullable=True),
    sa.Column('preview_url', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['map_id'], ['beatmap.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('hash')
    )
    op.create_table('channel',
    sa.Column('id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('guild_member',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=True),
    sa.Column('member_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild.id'], ),
    sa.ForeignKeyConstraint(['member_id'], ['member.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('guild_player',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=True),
    sa.Column('member_id', sa.BigInteger(), nullable=True),
    sa.Column('player_id', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild.id'], ),
    sa.ForeignKeyConstraint(['member_id'], ['member.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('score',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.String(length=128), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('score_id', sa.Integer(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('unmodified_score', sa.Integer(), nullable=True),
    sa.Column('mods', sa.String(length=128), nullable=True),
    sa.Column('pp', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('time_set', sa.DateTime(), nullable=True),
    sa.Column('leaderboard_id', sa.Integer(), nullable=True),
    sa.Column('song_hash', sa.String(length=128), nullable=True),
    sa.Column('song_name', sa.String(length=128), nullable=True),
    sa.Column('song_sub_name', sa.String(length=128), nullable=True),
    sa.Column('song_author_name', sa.String(length=128), nullable=True),
    sa.Column('level_author_name', sa.String(length=128), nullable=True),
    sa.Column('characteristic', sa.Enum('STANDARD', 'ONE_SABER', 'NO_ARROWS', 'DEGREE_90', 'DEGREE_360', 'LIGHTSHOW', 'LAWLESS', 'UNKNOWN', name='characteristic'), nullable=True),
    sa.Column('difficulty', sa.Enum('EASY', 'NORMAL', 'HARD', 'EXPERT', 'EXPERT_PLUS', 'UNKNOWN', name='difficulty'), nullable=True),
    sa.Column('max_score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('setting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=True),
    sa.Column('setting_type', sa.Enum('INT', 'STRING', 'BOOLEAN', name='settingtype'), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('value', sa.String(length=1024), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('achievement_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=True),
    sa.Column('role_id', sa.BigInteger(), nullable=True),
    sa.Column('group', sa.String(length=128), nullable=True),
    sa.Column('identifier', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('beatmap_version_difficulty',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version_hash', sa.String(length=128), nullable=True),
    sa.Column('njs', sa.Float(), nullable=True),
    sa.Column('offset', sa.Float(), nullable=True),
    sa.Column('notes', sa.Integer(), nullable=True),
    sa.Column('bombs', sa.Integer(), nullable=True),
    sa.Column('obstacles', sa.Integer(), nullable=True),
    sa.Column('nps', sa.Float(), nullable=True),
    sa.Column('length', sa.Float(), nullable=True),
    sa.Column('characteristic', sa.Enum('STANDARD', 'ONE_SABER', 'NO_ARROWS', 'DEGREE_90', 'DEGREE_360', 'LIGHTSHOW', 'LAWLESS', 'UNKNOWN', name='characteristic'), nullable=True),
    sa.Column('difficulty', sa.Enum('EASY', 'NORMAL', 'HARD', 'EXPERT', 'EXPERT_PLUS', 'UNKNOWN', name='difficulty'), nullable=True),
    sa.Column('events', sa.Integer(), nullable=True),
    sa.Column('chroma', sa.Boolean(), nullable=True),
    sa.Column('me', sa.Boolean(), nullable=True),
    sa.Column('ne', sa.Boolean(), nullable=True),
    sa.Column('cinema', sa.Boolean(), nullable=True),
    sa.Column('seconds', sa.Float(), nullable=True),
    sa.Column('parity_errors', sa.Integer(), nullable=True),
    sa.Column('parity_warns', sa.Integer(), nullable=True),
    sa.Column('parity_resets', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['version_hash'], ['beatmap_version.hash'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('member_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=True),
    sa.Column('member_id', sa.BigInteger(), nullable=True),
    sa.Column('role_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild.id'], ),
    sa.ForeignKeyConstraint(['member_id'], ['member.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sent_score',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('score_id', sa.Integer(), nullable=True),
    sa.Column('guild_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild.id'], ),
    sa.ForeignKeyConstraint(['score_id'], ['score.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('achievement_role_member',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=True),
    sa.Column('member_id', sa.BigInteger(), nullable=True),
    sa.Column('achievement_role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['achievement_role_id'], ['achievement_role.id'], ),
    sa.ForeignKeyConstraint(['guild_id'], ['guild.id'], ),
    sa.ForeignKeyConstraint(['member_id'], ['member.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('achievement_role_member')
    op.drop_table('sent_score')
    op.drop_table('member_role')
    op.drop_table('beatmap_version_difficulty')
    op.drop_table('achievement_role')
    op.drop_table('setting')
    op.drop_table('score')
    op.drop_table('role')
    op.drop_table('guild_player')
    op.drop_table('guild_member')
    op.drop_table('channel')
    op.drop_table('beatmap_version')
    op.drop_table('player')
    op.drop_table('member')
    op.drop_table('guild')
    op.drop_table('beatmap')
    # ### end Alembic commands ###
